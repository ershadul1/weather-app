{"version":3,"sources":["Redux/actions/actionTypes.js","Redux/reducers/weatherData.js","Redux/reducers/root.js","Redux/store.js","Redux/actions/actionCreators.js","components/Loading/Loading.js","components/Error/Error.js","components/UnitSwitch/UnitSwitch.js","components/Arrows/Arrows.js","containers/WeatherInfo/WeatherInfo.js","App.js","index.js"],"names":["FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","initialState","loaded","error","weatherData","state","action","type","actions","data","payload","errorMessage","rootReducer","combineReducers","weatherDataReducer","store","createStore","applyMiddleware","thunkMiddleware","fetchWeatherData","dispath","process","REACT_APP_API_KEY","REACT_APP_API_URL","fetch","then","response","json","catch","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","progress","marginLeft","spacing","LoadingScreen","classes","className","Typography","variant","CircularProgress","width","flexDirection","Error","Alert","severity","AlertTitle","Button","color","onClick","window","location","reload","GlobalCss","withStyles","margin","RadioButtonsGroup","unit","handleUnitChange","Container","maxWidth","FormControl","component","RadioGroup","aria-label","name","value","onChange","e","target","FormControlLabel","control","Radio","label","disabled","left","clipPath","background","right","Arrows","connect","useState","setUnit","console","log","mapDispatchToProps","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77e3b564.chunk.js","sourcesContent":["export const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\n","import * as actions from '../actions/actionTypes';\n\nconst initialState = {\n  loaded: false,\n  error: false,\n};\n\nconst weatherData = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCH_DATA_SUCCESS:\n      return {\n        ...state, loaded: true, error: false, data: action.payload,\n      };\n    case actions.FETCH_DATA_FAILURE:\n      return {\n        ...state, loaded: true, error: true, errorMessage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weatherData;\n","import { combineReducers } from 'redux';\nimport weatherDataReducer from './weatherData';\n\nconst rootReducer = combineReducers({\n  weatherData: weatherDataReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers/root';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import * as actions from './actionTypes';\n\nconst fetchWeatherData = () => (dispath) => {\n  const {\n    REACT_APP_API_KEY,\n    REACT_APP_API_URL,\n  } = process.env;\n\n  fetch(`${REACT_APP_API_URL}?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=40`)\n    .then((response) => response.json())\n    .then((data) => {\n      dispath({ type: actions.FETCH_DATA_SUCCESS, payload: data });\n    })\n    .catch((error) => {\n      dispath({ type: actions.FETCH_DATA_FAILURE, payload: error });\n    });\n};\n\nexport default fetchWeatherData;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n  },\n  progress: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function LoadingScreen() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\">\n        Loading\n      </Typography>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n  },\n}));\n\nexport default function Error() {\n  const classes = useStyles();\n\n  const reloadPage = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        Failed to fetch data from API\n      </Alert>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={reloadPage}\n      >\n        Reload Page\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst GlobalCss = withStyles({\n  '@global': {\n    '.MuiFormGroup-root': {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  },\n})(() => null);\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    margin: '5vh 0',\n  },\n}));\n\nexport default function RadioButtonsGroup({ unit, handleUnitChange }) {\n  const classes = useStyles();\n\n  const handleChange = (e) => {\n    handleUnitChange(e.target.value);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <GlobalCss />\n        <RadioGroup\n          aria-label=\"unit\"\n          name=\"unit\"\n          value={unit}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"C\"\n            control={<Radio color=\"primary\" />}\n            label={<Typography variant=\"h6\">Celcius</Typography>}\n          />\n          <FormControlLabel\n            value=\"F\"\n            control={<Radio color=\"primary\" />}\n            label={<Typography variant=\"h6\">Fahrenheit</Typography>}\n          />\n        </RadioGroup>\n      </FormControl>\n    </Container>\n\n  );\n}\n\nRadioButtonsGroup.propTypes = {\n  unit: PropTypes.string.isRequired,\n  handleUnitChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '1vh auto',\n    maxWidth: '750px',\n  },\n  disabled: {\n    display: 'none',\n  },\n  left: {\n    clipPath: 'polygon(0% 50%, 40% 0%, 40% 25%, 100% 25%, 100% 75%, 40% 75%, 40% 100%)',\n    background: '#3f50b5',\n    width: '100px',\n    height: '50px',\n    margin: '1vw',\n  },\n  right: {\n    clipPath: 'polygon(0% 25%, 60% 25%, 60% 0%, 100% 50%, 60% 100%, 60% 75%, 0% 75%)',\n    background: '#3f50b5',\n    width: '100px',\n    height: '50px',\n    margin: '1vw',\n  },\n}));\n\nexport default function Arrows() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button className={classes.left} />\n      <Button className={classes.right} />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport UnitSwitch from '../../components/UnitSwitch/UnitSwitch';\nimport Arrows from '../../components/Arrows/Arrows';\n\nconst WeatherInfo = ({ data }) => {\n  const [unit, setUnit] = useState('F');\n\n  const handleUnitChange = (value) => {\n    setUnit(value);\n  };\n\n  console.log(data);\n  return (\n    <Container maxWidth=\"md\">\n      <UnitSwitch unit={unit} handleUnitChange={handleUnitChange} />\n      <Arrows />\n    </Container>\n  );\n};\n\nWeatherInfo.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.weatherData.data,\n});\n\nexport default connect(mapStateToProps, null)(WeatherInfo);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchWeatherData from './Redux/actions/actionCreators';\nimport Loading from './components/Loading/Loading';\nimport Error from './components/Error/Error';\nimport WeatherInfo from './containers/WeatherInfo/WeatherInfo';\nimport './App.css';\n\nconst App = ({ loaded, error, fetchWeatherData }) => {\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  if (!loaded) {\n    return (<Loading />);\n  }\n\n  if (error) {\n    return (<Error />);\n  }\n\n  return (\n    <div className=\"App\">\n      <WeatherInfo />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  loaded: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  fetchWeatherData: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.weatherData.loaded,\n  error: state.weatherData.error,\n});\n\nconst mapDispatchToProps = { fetchWeatherData };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}