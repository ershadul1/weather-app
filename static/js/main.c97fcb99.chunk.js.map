{"version":3,"sources":["Redux/actions/actionTypes.js","helpers/parseCardData.js","Redux/reducers/weatherData.js","Redux/reducers/root.js","Redux/store.js","Redux/actions/actionCreators.js","components/Loading/Loading.js","components/Error/Error.js","components/UnitSwitch/UnitSwitch.js","components/Arrows/left.svg","components/Arrows/right.svg","components/Arrows/Arrows.js","helpers/unitConversion.js","helpers/formatDate.js","components/Card/Card.js","components/WeatherCards/WeatherCards.js","components/BarChart/BarChart.js","containers/WeatherInfo/WeatherInfo.js","App.js","index.js"],"names":["FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","avgData","store","arr","Object","keys","forEach","key","temperature","temp","element","avgTemp","length","humidity","avgHumidity","push","Math","round","parseWeatherData","data","weatherData","list","i","date","dt_txt","split","main","parseData","hourlyData","dailyData","initialState","loaded","error","state","action","type","actions","payload","errorMessage","rootReducer","combineReducers","weatherDataReducer","createStore","applyMiddleware","thunkMiddleware","fetchWeatherData","dispath","process","REACT_APP_API_KEY","REACT_APP_API_URL","fetch","then","response","json","catch","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","progress","marginLeft","spacing","LoadingScreen","classes","className","Typography","variant","CircularProgress","width","flexDirection","Error","Alert","severity","AlertTitle","Button","color","onClick","window","location","reload","GlobalCss","withStyles","margin","RadioButtonsGroup","unit","handleUnitChange","Container","maxWidth","FormControl","component","RadioGroup","aria-label","name","value","onChange","e","target","FormControlLabel","control","Radio","label","arrow","disabled","Arrows","next","prev","currentCard","totalCards","src","LeftArrow","alt","RightArrow","convertToCelsius","val","toFixed","convertToFareheit","convert","scale","formatDate","Date","toString","substr","selected","background","SimpleCard","cardIndex","Card","CardContent","text","WeatherCards","last","populateArr","map","barcontainer","bar","textAlign","BarChart","tempList","style","connect","useState","setUnit","setCurrentCard","mapDispatchToProps","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c97fcb99.chunk.js","sourcesContent":["export const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\n","const parseData = (data) => {\n  const store = {};\n  const { list } = data;\n  for (let i = 0; i < list.length; i += 1) {\n    const date = list[i].dt_txt.split(' ')[0];\n    if (!store[date]) {\n      store[date] = {\n        temp: [list[i].main.temp],\n        humidity: [list[i].main.humidity],\n      };\n    } else {\n      store[date].temp.push(list[i].main.temp);\n      store[date].humidity.push(list[i].main.humidity);\n    }\n  }\n  return store;\n};\n\nconst avgData = (store) => {\n  const arr = [];\n  Object.keys(store).forEach((key) => {\n    let temperature = 0;\n    store[key].temp.forEach((element) => {\n      temperature += element;\n    });\n    const avgTemp = temperature / store[key].temp.length;\n\n    let humidity = 0;\n    store[key].humidity.forEach((element) => {\n      humidity += element;\n    });\n    const avgHumidity = humidity / store[key].temp.length;\n    arr.push([key, Math.round(avgTemp), Math.round(avgHumidity)]);\n  });\n  return arr;\n};\n\nconst parseWeatherData = (data) => {\n  const weatherData = parseData(data);\n  return {\n    hourlyData: weatherData,\n    dailyData: avgData(weatherData),\n  };\n};\n\nexport default parseWeatherData;\n","import * as actions from '../actions/actionTypes';\nimport parseData from '../../helpers/parseCardData';\n\nconst initialState = {\n  loaded: false,\n  error: false,\n};\n\nconst weatherData = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCH_DATA_SUCCESS:\n      return {\n        ...state, loaded: true, error: false, data: parseData(action.payload),\n      };\n    case actions.FETCH_DATA_FAILURE:\n      return {\n        ...state, loaded: true, error: true, errorMessage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weatherData;\n","import { combineReducers } from 'redux';\nimport weatherDataReducer from './weatherData';\n\nconst rootReducer = combineReducers({\n  weatherData: weatherDataReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers/root';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import * as actions from './actionTypes';\n\nconst fetchWeatherData = () => (dispath) => {\n  const {\n    REACT_APP_API_KEY,\n    REACT_APP_API_URL,\n  } = process.env;\n\n  fetch(`${REACT_APP_API_URL}?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=40`)\n    .then((response) => response.json())\n    .then((data) => {\n      dispath({ type: actions.FETCH_DATA_SUCCESS, payload: data });\n    })\n    .catch((error) => {\n      dispath({ type: actions.FETCH_DATA_FAILURE, payload: error });\n    });\n};\n\nexport default fetchWeatherData;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n  },\n  progress: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function LoadingScreen() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\">\n        Loading\n      </Typography>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n  },\n}));\n\nexport default function Error() {\n  const classes = useStyles();\n\n  const reloadPage = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        Failed to fetch data from API\n      </Alert>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={reloadPage}\n      >\n        Reload Page\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst GlobalCss = withStyles({\n  '@global': {\n    '.MuiFormGroup-root': {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  },\n})(() => null);\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    margin: '3vh 0',\n  },\n}));\n\nexport default function RadioButtonsGroup({ unit, handleUnitChange }) {\n  const classes = useStyles();\n\n  const handleChange = (e) => {\n    handleUnitChange(e.target.value);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <GlobalCss />\n        <RadioGroup\n          aria-label=\"unit\"\n          name=\"unit\"\n          value={unit}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"C\"\n            control={<Radio color=\"primary\" />}\n            label={<Typography variant=\"h6\">Celcius</Typography>}\n          />\n          <FormControlLabel\n            value=\"F\"\n            control={<Radio color=\"primary\" />}\n            label={<Typography variant=\"h6\">Fahrenheit</Typography>}\n          />\n        </RadioGroup>\n      </FormControl>\n    </Container>\n\n  );\n}\n\nRadioButtonsGroup.propTypes = {\n  unit: PropTypes.string.isRequired,\n  handleUnitChange: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/left.06b4b01c.svg\";","export default __webpack_public_path__ + \"static/media/right.cb9699c1.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport LeftArrow from './left.svg';\nimport RightArrow from './right.svg';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '1vh auto',\n    maxWidth: '750px',\n  },\n  arrow: {\n    display: 'block',\n    width: '120px',\n    height: '60px',\n    margin: '1vw',\n  },\n  disabled: {\n    display: 'none',\n  },\n}));\n\nexport default function Arrows({\n  next, prev, currentCard, totalCards,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button onClick={prev} className={`${currentCard === 0 ? classes.disabled : ''}`}>\n          <img\n            src={LeftArrow}\n            alt=\"left-arrow\"\n            className={classes.arrow}\n          />\n        </Button>\n      </div>\n      <div>\n        <Button onClick={next} className={`${currentCard === totalCards - 1 ? classes.disabled : ''}`}>\n          <img\n            src={RightArrow}\n            alt=\"right-arrow\"\n            className={classes.arrow}\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nArrows.propTypes = {\n  next: PropTypes.func.isRequired,\n  prev: PropTypes.func.isRequired,\n  currentCard: PropTypes.number.isRequired,\n  totalCards: PropTypes.number.isRequired,\n};\n","const convertToCelsius = (val) => {\n  const res = `${(val - 273.15).toFixed(0)}`;\n  return res;\n};\n\nconst convertToFareheit = (val) => {\n  const res = `${((val - 273.15) * (9 / 5) + 32).toFixed(0)}`;\n  return res;\n};\n\nconst convert = (scale) => {\n  if (scale === 'C') {\n    return convertToCelsius;\n  }\n\n  return convertToFareheit;\n};\n\nexport default convert;\n","const formatDate = (date) => {\n  const newDate = new Date(date);\n  const arr = newDate.toString().split(' ');\n  const res = `${arr[2]} ${arr[1]} ${arr[3].substr(2, 3)}`;\n  return res;\n};\n\nexport default formatDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport convert from '../../helpers/unitConversion';\nimport formatDate from '../../helpers/formatDate';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '30vw',\n    margin: '1vw',\n  },\n  selected: {\n    background: '#90caf9',\n  },\n});\n\nexport default function SimpleCard({\n  cardIndex, data, currentCard, unit,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={`${classes.root} ${cardIndex === currentCard ? classes.selected : ''}`}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.text}>\n          Temp:\n          <br />\n          {convert(unit)(data[1])}\n          {unit}\n          <br />\n          Date:\n          <br />\n          {formatDate(data[0])}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nSimpleCard.propTypes = {\n  cardIndex: PropTypes.number.isRequired,\n  data: PropTypes.instanceOf(Array).isRequired,\n  currentCard: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '../Card/Card';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '1vh auto',\n    maxWidth: '750px',\n  },\n}));\n\nexport default function WeatherCards({ currentCard, dailyData, unit }) {\n  const classes = useStyles();\n  const pageSize = 3;\n  const last = currentCard < pageSize ? 2 : currentCard;\n  const populateArr = (last) => {\n    const arr = [];\n    for (let i = last - 2; i <= last; i += 1) {\n      arr.push(i);\n    }\n    return arr;\n  };\n\n  const arr = populateArr(last);\n\n  return (\n    <div className={classes.root}>\n      {arr.map((element) => (\n        <Card\n          key={element}\n          cardIndex={element}\n          data={dailyData[element]}\n          currentCard={currentCard}\n          unit={unit}\n        />\n      ))}\n    </div>\n  );\n}\n\nWeatherCards.propTypes = {\n  currentCard: PropTypes.number.isRequired,\n  dailyData: PropTypes.instanceOf(Array).isRequired,\n  unit: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport convert from '../../helpers/unitConversion';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    margin: '7vh auto',\n  },\n  barcontainer: {\n    width: '12.5%',\n  },\n  bar: {\n    background: '#ffc107',\n    margin: '4px',\n  },\n  text: {\n    textAlign: 'center',\n  },\n}));\n\nexport default function BarChart({ tempList, unit }) {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"sm\" className={classes.root}>\n      {tempList.map((element) => (\n        <div key={element} className={classes.barcontainer}>\n          <div className={classes.bar} style={{ height: `${(element - 243) / 4}vh` }} />\n\n          <Typography variant=\"body2\" className={classes.text}>\n            {' '}\n            {convert(unit)(element)}\n            {' '}\n            {unit}\n          </Typography>\n        </div>\n      ))}\n    </Container>\n  );\n}\n\nBarChart.propTypes = {\n  tempList: PropTypes.instanceOf(Array).isRequired,\n  unit: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport UnitSwitch from '../../components/UnitSwitch/UnitSwitch';\nimport Arrows from '../../components/Arrows/Arrows';\nimport WeatherCards from '../../components/WeatherCards/WeatherCards';\nimport BarChart from '../../components/BarChart/BarChart';\n\nconst WeatherInfo = ({ data }) => {\n  const [unit, setUnit] = useState('F');\n  const [currentCard, setCurrentCard] = useState(0);\n  const totalCards = 5;\n  const { hourlyData } = data;\n  const { dailyData } = data;\n  const tempList = hourlyData[dailyData[currentCard][0]].temp;\n\n  const handleUnitChange = (value) => {\n    setUnit(value);\n  };\n\n  const moveToNextCard = () => {\n    setCurrentCard((currentCard) => {\n      if (currentCard < totalCards - 1) {\n        return currentCard + 1;\n      }\n      return currentCard;\n    });\n  };\n\n  const moveToPrevCard = () => {\n    setCurrentCard((currentCard) => {\n      if (currentCard > 0) {\n        return currentCard - 1;\n      }\n      return currentCard;\n    });\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <UnitSwitch unit={unit} handleUnitChange={handleUnitChange} />\n      <Arrows\n        next={moveToNextCard}\n        prev={moveToPrevCard}\n        currentCard={currentCard}\n        totalCards={totalCards}\n      />\n      <WeatherCards\n        currentCard={currentCard}\n        dailyData={dailyData}\n        unit={unit}\n      />\n      <BarChart\n        tempList={tempList}\n        unit={unit}\n      />\n    </Container>\n  );\n};\n\nWeatherInfo.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.weatherData.data,\n});\n\nexport default connect(mapStateToProps, null)(WeatherInfo);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchWeatherData from './Redux/actions/actionCreators';\nimport Loading from './components/Loading/Loading';\nimport Error from './components/Error/Error';\nimport WeatherInfo from './containers/WeatherInfo/WeatherInfo';\n\nconst App = ({ loaded, error, fetchWeatherData }) => {\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  if (!loaded) {\n    return (<Loading />);\n  }\n\n  if (error) {\n    return (<Error />);\n  }\n\n  return (\n    <div className=\"App\">\n      <WeatherInfo />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  loaded: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  fetchWeatherData: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.weatherData.loaded,\n  error: state.weatherData.error,\n});\n\nconst mapDispatchToProps = { fetchWeatherData };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}