{"version":3,"sources":["Redux/actions/actionTypes.js","Redux/reducers/weatherData.js","Redux/reducers/root.js","Redux/store.js","Redux/actions/actionCreators.js","components/Loading/Loading.js","containers/WeatherInfo/WeatherInfo.js","App.js","index.js"],"names":["FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","initialState","loaded","error","weatherData","state","action","type","actions","data","payload","errorMessage","rootReducer","combineReducers","weatherDataReducer","store","createStore","applyMiddleware","thunkMiddleware","fetchWeatherData","dispath","process","REACT_APP_API_KEY","REACT_APP_API_URL","fetch","then","response","json","catch","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","progress","marginLeft","spacing","LoadingScreen","classes","className","Typography","variant","CircularProgress","WeatherInfo","mapDispatchToProps","connect","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAaA,EAAqB,qBACrBC,EAAqB,qBCC5BC,EAAe,CACnBC,QAAQ,EACRC,OAAO,GAkBMC,EAfK,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IACYH,QAAQ,EAAMC,OAAO,EAAOM,KAAMH,EAAOI,UAEvD,KAAKF,EACH,OAAO,2BACFH,GADL,IACYH,QAAQ,EAAMC,OAAO,EAAMQ,aAAcL,EAAOI,UAE9D,QACE,OAAOL,ICXEO,EAJKC,YAAgB,CAClCT,YAAaU,ICEAC,EAFDC,YAAYJ,EAAaK,YAAgBC,MCcxCC,G,MAhBU,kBAAM,SAACC,GAAa,IAAD,EAItCC,wQAFFC,EAFwC,EAExCA,kBACAC,EAHwC,EAGxCA,kBAGFC,MAAM,GAAD,OAAID,EAAJ,8BAA2CD,EAA3C,YACFG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GACLW,EAAQ,CAAEb,KAAMC,EAA4BE,QAASD,OAEtDmB,OAAM,SAACzB,GACNiB,EAAQ,CAAEb,KAAMC,EAA4BE,QAASP,U,uCCRrD0B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAEVC,SAAU,CACRC,WAAYP,EAAMQ,QAAQ,QAIf,SAASC,IACtB,IAAMC,EAAUZ,IAEhB,OACE,sBAAKa,UAAWD,EAAQT,KAAxB,UACE,cAACW,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBAGA,cAACC,EAAA,EAAD,CAAkBH,UAAWD,EAAQJ,cC1B3C,IAEeS,EAFK,kBAAO,8CCuCrBC,G,MAAqB,CAAE5B,qBAEd6B,eAPS,SAAC3C,GAAD,MAAY,CAClCH,OAAQG,EAAMD,YAAYF,OAC1BC,MAAOE,EAAMD,YAAYD,SAKa4C,EAAzBC,EAjCH,SAAC,GAAyC,IAAvC9C,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,MAAOgB,EAAuB,EAAvBA,iBAK5B,OAJA8B,qBAAU,WACR9B,MACC,IAEEjB,EAIDC,EACM,sCAIR,qBAAKuC,UAAU,MAAf,SACE,cAAC,EAAD,MATM,cAAC,EAAD,OCPZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJsC,SAASC,eAAe,W","file":"static/js/main.4b2dfce6.chunk.js","sourcesContent":["export const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\n","import * as actions from '../actions/actionTypes';\n\nconst initialState = {\n  loaded: false,\n  error: false,\n};\n\nconst weatherData = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCH_DATA_SUCCESS:\n      return {\n        ...state, loaded: true, error: false, data: action.payload,\n      };\n    case actions.FETCH_DATA_FAILURE:\n      return {\n        ...state, loaded: true, error: true, errorMessage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default weatherData;\n","import { combineReducers } from 'redux';\nimport weatherDataReducer from './weatherData';\n\nconst rootReducer = combineReducers({\n  weatherData: weatherDataReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers/root';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import * as actions from './actionTypes';\n\nconst fetchWeatherData = () => (dispath) => {\n  const {\n    REACT_APP_API_KEY,\n    REACT_APP_API_URL,\n  } = process.env;\n\n  fetch(`${REACT_APP_API_URL}?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=40`)\n    .then((response) => response.json())\n    .then((data) => {\n      dispath({ type: actions.FETCH_DATA_SUCCESS, payload: data });\n    })\n    .catch((error) => {\n      dispath({ type: actions.FETCH_DATA_FAILURE, payload: error });\n    });\n};\n\nexport default fetchWeatherData;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n  },\n  progress: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function LoadingScreen() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\">\n        Loading\n      </Typography>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n","const WeatherInfo = () => (<p>weather info</p>);\n\nexport default WeatherInfo;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchWeatherData from './Redux/actions/actionCreators';\nimport Loading from './components/Loading/Loading';\nimport WeatherInfo from './containers/WeatherInfo/WeatherInfo';\nimport './App.css';\n\nconst App = ({ loaded, error, fetchWeatherData }) => {\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  if (!loaded) {\n    return (<Loading />);\n  }\n\n  if (error) {\n    return (<p>Error</p>);\n  }\n\n  return (\n    <div className=\"App\">\n      <WeatherInfo />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  loaded: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  fetchWeatherData: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loaded: state.weatherData.loaded,\n  error: state.weatherData.error,\n});\n\nconst mapDispatchToProps = { fetchWeatherData };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}